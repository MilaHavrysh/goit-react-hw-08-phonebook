{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/LogInView/LogInView.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LogInView","useState","mail","setMail","password","setPassword","dispatch","useDispatch","InputLogInChange","e","target","attributes","id","htmlFor","type","name","autoComplete","onChange","onClick","preventDefault","user","email","console","log","LogInUser"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,iFIgDvFC,UAjDG,WAAO,IAAD,EACEC,mBAAS,MADX,mBACfC,EADe,KACTC,EADS,OAEUF,mBAAS,MAFnB,mBAEfG,EAFe,KAELC,EAFK,KAIhBC,EAAWC,cAEXC,EAAmB,SAAAC,GACc,SAAjCA,EAAEC,OAAOC,WAAWC,GAAGjB,MACzBQ,EAAQM,EAAEC,OAAOf,OACyB,aAAjCc,EAAEC,OAAOC,WAAWC,GAAGjB,OAChCU,EAAYI,EAAEC,OAAOf,QAczB,OACE,iCACE,uBAAOkB,QAAQ,OAAf,mBACA,uBACEC,KAAK,OACLF,GAAG,OACHG,KAAK,OACLC,aAAa,MACbC,SAAUT,IAEZ,uBAAOK,QAAQ,WAAf,kBACA,uBACEC,KAAK,OACLF,GAAG,WACHG,KAAK,WACLC,aAAa,MACbC,SAAUT,IAEZ,wBAAQM,KAAK,SAASI,QA5BL,SAAAT,GACnBA,EAAEU,iBACF,IAAMC,EAAO,CACXC,MAAOnB,EACPE,SAAUA,GAEZkB,QAAQC,IAAIH,GACZd,EAASkB,YAAUJ,KAqBjB","file":"static/js/LogInView.51a8f22a.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { LogInUser } from '../../redux/auth/auth-operations';\r\n\r\nconst LogInView = () => {\r\n  const [mail, setMail] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const InputLogInChange = e => {\r\n    if (e.target.attributes.id.value === 'mail') {\r\n      setMail(e.target.value);\r\n    } else if (e.target.attributes.id.value === 'password') {\r\n      setPassword(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const user = {\r\n      email: mail,\r\n      password: password,\r\n    };\r\n    console.log(user);\r\n    dispatch(LogInUser(user));\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"mail\">Email</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"mail\"\r\n        name=\"mail\"\r\n        autoComplete=\"off\"\r\n        onChange={InputLogInChange}\r\n      />\r\n      <label htmlFor=\"password\">Name</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"password\"\r\n        name=\"password\"\r\n        autoComplete=\"off\"\r\n        onChange={InputLogInChange}\r\n      />\r\n      <button type=\"submit\" onClick={handleSubmit}>\r\n        Log In\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LogInView;\r\n"],"sourceRoot":""}