{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","views/HomePage/HomePage.jsx","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","views/UserContactsView/UserContactsView.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","HomePage","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","offset","arguments","toLowerCase","v4","options","buf","rnds","random","axios","defaults","baseURL","ContactForm","useState","name","setName","number","setNumber","validName","setValidName","validNum","setValidNum","dispatch","useDispatch","inputChange","e","target","attributes","id","nodeValue","validity","valid","className","styles","contact_form","htmlFor","contact_form_input_label","contact_form_input","type","pattern","title","required","autoComplete","onChange","placeholder","contact_form_button","onClick","newName","uuidv4","SubmitContactRequest","post","then","data","SubmitContactSuccess","catch","error","SubmitContactError","Submit","getFilter","state","contacts","filter","getLoading","loading","getVisibleContacts","createSelector","items","element","includes","Filter","useSelector","SetFilter","ContactList","useEffect","FetchContactsRequest","get","FetchContactsSuccess","FetchContactsError","contactList","map","contact_list_item","contact_list_item_name","contact_list_item_number","contact_list_item_button","DeleteContactRequest","delete","DeleteContactSuccess","DeleteContactError","UserContactsView"],"mappings":"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","file":"static/js/HomePage.0321ad5e.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_form\":\"ContactForm_contact_form__4Qr3P\",\"contact_form_input\":\"ContactForm_contact_form_input__13RG-\",\"contact_form_input_label\":\"ContactForm_contact_form_input_label__hv9FS\",\"contact_form_button\":\"ContactForm_contact_form_button__2q-G-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3WTAJ\",\"contact_list_item\":\"ContactList_contact_list_item__1OObb\",\"contact_list_item_button\":\"ContactList_contact_list_item_button__3ftCW\",\"contact_list_item_name\":\"ContactList_contact_list_item_name__2LHEX\",\"contact_list_item_number\":\"ContactList_contact_list_item_number__33Of-\"};","const HomePage = () => {\r\n  return (\r\n    <>\r\n      <h1>HELLO, MY DEAR FRIEND! It's your new phonebook!</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import axios from 'axios';\r\nimport {\r\n  SubmitContactRequest,\r\n  SubmitContactSuccess,\r\n  SubmitContactError,\r\n  DeleteContactRequest,\r\n  DeleteContactSuccess,\r\n  DeleteContactError,\r\n  FetchContactsRequest,\r\n  FetchContactsSuccess,\r\n  FetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nexport const Submit = newName => dispatch => {\r\n  dispatch(SubmitContactRequest());\r\n  axios\r\n    .post('/contacts', newName)\r\n    .then(({ data }) => dispatch(SubmitContactSuccess(data)))\r\n    .catch(error => dispatch(SubmitContactError(error)));\r\n};\r\n\r\nexport const DeleteContact = id => dispatch => {\r\n  dispatch(DeleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(DeleteContactSuccess(id)))\r\n    .catch(error => dispatch(DeleteContactError(error)));\r\n};\r\n\r\nexport const FetchContacts = () => dispatch => {\r\n  dispatch(FetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => {\r\n      dispatch(FetchContactsSuccess(data));\r\n    })\r\n    .catch(error => FetchContactsError(error));\r\n};\r\n","//import { connect } from 'react-redux';\r\n//import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Submit } from '../../redux/contacts/contacts-operations';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [validName, setValidName] = useState(false);\r\n  const [validNum, setValidNum] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const addContactName = e => {\r\n    const newName = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    if (name && number !== '' && validName && validNum) {\r\n      dispatch(Submit(newName));\r\n      setName('');\r\n      setNumber('');\r\n    }\r\n  };\r\n\r\n  const inputChange = e => {\r\n    if (e.target.attributes.id.nodeValue === 'name') {\r\n      setName(e.target.value);\r\n      setValidName(e.target.validity.valid);\r\n    } else if (e.target.attributes.id.nodeValue === 'number') {\r\n      setNumber(e.target.value);\r\n      setValidNum(e.target.validity.valid);\r\n    }\r\n  };\r\n  return (\r\n    <form className={styles.contact_form}>\r\n      <label htmlFor={name} className={styles.contact_form_input_label}>\r\n        name\r\n      </label>\r\n      <input\r\n        className={styles.contact_form_input}\r\n        type=\"text\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        autoComplete=\"off\"\r\n        onChange={inputChange}\r\n        value={name}\r\n        placeholder=\" \"\r\n      />\r\n\r\n      <label htmlFor={number} className={styles.contact_form_input_label}>\r\n        number\r\n      </label>\r\n      <input\r\n        className={styles.contact_form_input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n        required\r\n        id=\"number\"\r\n        autoComplete=\"off\"\r\n        onChange={inputChange}\r\n        value={number}\r\n        placeholder=\" \"\r\n      />\r\n\r\n      <button\r\n        className={styles.contact_form_button}\r\n        type=\"button\"\r\n        onClick={addContactName}\r\n      >\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\n/*-------------------- Без useSelector и useDispatch-------------------------*/\r\n/*\r\nContactForm.propTypes = {\r\n  Submit: PropTypes.func.isRequired,\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    Submit: id => dispatch(operations.Submit(id)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(ContactForm);*/\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (items, filter) => {\r\n    const visible = items.filter(element =>\r\n      element.name.toLowerCase().includes(filter),\r\n    );\r\n    return visible;\r\n  },\r\n);\r\n","//import PropTypes from 'prop-types';\r\n//import { connect } from 'react-redux';\r\nimport { SetFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <h2>find contacts by name</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        autoComplete=\"off\"\r\n        onChange={e => dispatch(SetFilter(e.target.value))}\r\n        value={filter}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\n/*-------------------- Без useSelector и useDispatch-------------------------*/\r\n/*\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onFilterContact: PropTypes.func,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    filter: getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSetFilter: e => dispatch(actions.onSetFilter(e.target.value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);*/\r\n","//import { connect } from 'react-redux';\r\n//import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\nimport {\r\n  FetchContacts,\r\n  DeleteContact,\r\n} from '../../redux/contacts/contacts-operations';\r\nimport React, { useEffect } from 'react';\r\nimport {\r\n  getVisibleContacts,\r\n  getLoading,\r\n} from '../../redux/contacts/contacts-selectors';\r\n\r\nconst ContactList = () => {\r\n  const items = useSelector(getVisibleContacts);\r\n  const loading = useSelector(getLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(FetchContacts()), []);\r\n\r\n  return (\r\n    <>\r\n      {loading && <p>Loading...</p>}\r\n      <ul className={styles.contactList}>\r\n        {items.map(element => (\r\n          <li key={element.id} className={styles.contact_list_item}>\r\n            <p className={styles.contact_list_item_name}>{element.name}</p>\r\n            <p className={styles.contact_list_item_number}>{element.number}</p>\r\n            <button\r\n              className={styles.contact_list_item_button}\r\n              type=\"button\"\r\n              onClick={() => dispatch(DeleteContact(element.id))}\r\n            >\r\n              delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\n\r\n\r\n\r\n/*-------------------- Без useSelector и useDispatch-------------------------*/\r\n\r\n/*ContactList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  DeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  items: getVisibleContacts(state),\r\n  loading: getLoading(state),\r\n});*/\r\n/*const mapDispatchToProps = dispatch => {\r\n  return {\r\n    DeleteContact: id => dispatch(operations.DeleteContact(id)),\r\n    FetchContacts: () => dispatch(operations.FetchContacts()),\r\n  };\r\n};*/\r\n//export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import ContactForm from '../../components/ContactForm/ContactForm';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport ContactList from '../../components/ContactList/ContactList';\r\n\r\nconst UserContactsView = () => {\r\n  return (\r\n    <>\r\n      <h1>phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserContactsView;\r\n"],"sourceRoot":""}